# Azure devops pipeline

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  tf_init_command_options: '-input=false -backend-config="storage_account_name=$(TF_BACKEND_STORAGE_ACCOUNT)" -backend-config="container_name=tfstate" -backend-config="key=azure.iam.iac.it-network-test.tf.state" -backend-config="access_key=$(TF_BACKEND_SA_ACCESS_KEY)"'

stages:
- stage: 'pipeline_plan'
  jobs:
  - job: 'plan'
    steps:

    - checkout: self
    - task: TerraformInstaller@0
      displayName: install Terraform v1.1.8
      inputs:
        terraformVersion: '1.1.8'

    - task: Bash@3
      displayName: 'Terraform Init'
      inputs:
        targetType: 'inline'
        script: |
            echo '#######Terraform Init########'
            terraform init $(tf_init_command_options)
        workingDirectory: $(System.DefaultWorkingDirectory)
        failOnStderr: true

    - task: TerraformTaskV1@0
      displayName: 'plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '-var-file="./pipeline_terraform.tfvars" -var="tenant_id=$(TENANT_ID)" -var="subscription_id=$(SUBSCRIPTION_ID)" -var="client_id=$(CLIENT_ID)" -var="client_secret=$(CLIENT_SECRET)"'

        environmentServiceNameAzureRm: 'Azure'

- stage: 'pipeline_deploy'
  jobs:
  - job: 'pipeline_deploy'
    steps:

    - checkout: self
    - task: TerraformInstaller@0
      displayName: install Terraform v1.1.8
      inputs:
        terraformVersion: '1.1.8'

    - task: Bash@3
      displayName: 'Terraform Init'
      inputs:
        targetType: 'inline'
        script: |
            echo '#######Terraform Init########'
            terraform init $(tf_init_command_options)
        workingDirectory: $(System.DefaultWorkingDirectory)
        failOnStderr: true

    - task: TerraformTaskV1@0
      displayName: 'apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: '-var-file="./pipeline_terraform.tfvars" -var="tenant_id=$(SUBSCRIPTION_ID)" -var="client_id=$(CLIENT_ID)" -var="client_secret=$(CLIENT_SECRET)"'
        environmentServiceNameAzureRm: 'Azure'
